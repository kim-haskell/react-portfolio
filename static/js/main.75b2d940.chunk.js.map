{"version":3,"sources":["components/About_Me.png","components/Home.js","components/Portfolio.js","components/Contact.js","components/Footer.js","components/Navbar.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Home","className","src","About_Me","alt","Portfolio","class","id","href","MyForm","props","submitForm","bind","state","status","this","onSubmit","action","method","type","name","ev","preventDefault","form","target","data","FormData","xhr","XMLHttpRequest","open","setRequestHeader","onreadystatechange","readyState","DONE","reset","setState","send","React","Component","Footer","Navbar","data-toggle","data-target","aria-controls","aria-expanded","aria-label","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.75b2d940.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/About_Me.7fbc515e.png\";","import React from \"react\";\nimport About_Me from \"./About_Me.png\";\nimport \"./styles.css\";\n\nfunction Home () {\n\n    return(\n     <div className=\"card mb-3\">\n     <div className=\"row no-gutters\">\n    <div className=\"col-md-4\">\n      <img src={About_Me} className=\"card-img\" alt=\"...\"></img>\n     </div>\n     <div className=\"col-md-8\">\n      <div className=\"card-body\">\n        <h5 className=\"card-title\">About Me </h5>\n        <p className=\"card-text\">My name is Kim Haskell and I am a full Stack Web Developer with a background in visual merchandising and management looking to bring in my eye for design to a front-end or full stack web development position. I recently completed a full stack web development program through the University of Denver and learned many technologies such as React, ES6, MySQL, CSS and HTML. I have worked on team projects to develop responsive apps, such as a recipe and cocktail app that used APIs to pull recipes based on inputted ingredients. I hope to utilize my skills and continue to grow as I work to create exciting user web experiences.\n        </p>\n      </div>\n    </div>\n   </div>\n  </div>\n \n )\n}\n\n\nexport default Home;","import React from \"react\";\n\nfunction Portfolio () {\n    return (\n\n        <>\n        <div class=\"container\">\n        <div class=\"jumbotron jumbotron-fluid\" id=\"jumbo\">\n          <div class=\"container\">\n            <h1>Projects</h1>\n            <div class=\"card-text\">\n              <div class=\"card-body\" id=\"pages\">\n               <h5 class=\"card-title\">Pages</h5>\n               <p><a href=\"https://www.linkedin.com/in/kimhaskella59a631a22/\">LinkedIn Profile</a></p>\n              <p><a href=\"assets/Kim Haskell.Resume .pdf\">Resume</a> </p>\n             </div>\n             </div>\n        </div>\n      \n        <div class=\"container\">\n        <div class=\"row\">\n          <div class=\"col-sm-4\">\n          <img class=\"card-img-top\" src=\"assets/Weather Dashboard.png\" alt=\"Weather icons and cities\"></img>\n            <a href=\"https://kim-haskell.github.io/Weather-Dashboard/\">Weather-Dashboard Project</a>\n          </div>\n          <div class=\"col-sm-4\">\n            <img class=\"card-img-top\" src=\"assets/Work Day Scheduler.png\" alt=\"Image of Calendar day schedule\"></img>\n              <a href=\"https://kim-haskell.github.io/Work-Day-Scheduler/\">Work Day Schedule Project</a>\n            </div>\n          <div class=\"col-sm-4\">\n          <img class=\"card-img-top\" src=\"assets/Dang I'm Hungry.png\" alt=\"Text that says Dang I'm hungry\"></img>\n            <a href=\"https://magire01.github.io/project1-group7/\">Food and Coctail Recipe Page</a>\n        </div>\n      </div>  \n    <br></br>\n        <div class=\"row\">\n          <div class=\"col-sm-4\" id=\"second-row\">\n          <img class=\"card-img-top\" src=\"assets/NeighBoard.png\" alt=\"Image of houses\"></img>\n            <a href=\"https://github.com/kim-haskell/NeighBOARD/\">NeighBoard Community App Project</a>\n            </div>\n            <div class=\"col-sm-4\" id=\"second-row\">\n            <img class=\"card-img-top\" src=\"assets/Note-Taker.png\" alt=\"Notepad with to-do list\"></img>\n              <a href=\"https://github.com/kim-haskell/Note-taker-1\">Note Taker Project</a>\n              </div>\n            </div>  \n        </div>\n      </div>\n    </div> \n\n    </>\n    )\n}\n\n\nexport default Portfolio;","import React from \"react\";\n\nexport default class MyForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.submitForm = this.submitForm.bind(this);\n    this.state = {\n      status: \"\"\n    };\n  }\n\n  render() {\n    const { status } = this.state;\n    return (\n      <form\n        onSubmit={this.submitForm}\n        action=\"https://formspree.io/mbjzbokz\"\n        method=\"POST\"\n      >\n        Contact Form\n        <label>Email:</label>\n        <input type=\"email\" name=\"email\" />\n        <label>Message:</label>\n        <input type=\"text\" name=\"message\" />\n        {status === \"SUCCESS\" ? <p>Thanks!</p> : <button>Submit</button>}\n        {status === \"ERROR\" && <p>Ooops! There was an error.</p>}\n      </form>\n    );\n  }\n\n  submitForm(ev) {\n    ev.preventDefault();\n    const form = ev.target;\n    const data = new FormData(form);\n    const xhr = new XMLHttpRequest();\n    xhr.open(form.method, form.action);\n    xhr.setRequestHeader(\"Accept\", \"application/json\");\n    xhr.onreadystatechange = () => {\n      if (xhr.readyState !== XMLHttpRequest.DONE) return;\n      if (xhr.status === 200) {\n        form.reset();\n        this.setState({ status: \"SUCCESS\" });\n      } else {\n        this.setState({ status: \"ERROR\" });\n      }\n    };\n    xhr.send(data);\n  }\n}","import React from \"react\";\n\nfunction Footer () {\n\n\n    return(\n\n        <div className=\"col-md-12\" id=\"footer\">\n\n        <footer id=\"center-footer\">Made with ❤️️ by Kim Haskell</footer> \n        <p>\n             &copy; 2020 Copyright\n        </p>\n      </div>  \n    )\n}\n\nexport default Footer;","import React from \"react\";\n\n\n\nfunction Navbar () {\n    \n    return (\n        \n            <nav className=\"navbar navbar-expand-lg navbar-dark bg-secondary\">\n            <h4>Kim Haskell</h4>\n            <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNavAltMarkup\" aria-controls=\"navbarNavAltMarkup\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n              <span className=\"navbar-toggler-icon\"></span>\n            </button>\n            <div className=\"collapse navbar-collapse\" id=\"navbarNavAltMarkup\">\n              <div className=\"navbar-nav\">\n                <a className=\"nav-item nav-link active\" href={\"/\"}>About <span className=\"sr-only\">(current)</span></a>\n                <a className=\"nav-item nav-link\" href={\"/Portfolio\"}>Portfolio</a>\n                <a className=\"nav-item nav-link\" href={\"./Contact\"}>Contact</a>\n              </div>\n             </div> \n          </nav>\n          \n     );\n    \n}\n\nexport default Navbar;\n","import React from 'react';\nimport Home from \"./components/Home\";\nimport Portfolio from \"./components/Portfolio\";\nimport Contact from \"./components/Contact\";\nimport Footer from \"./components/Footer\";\n\nimport './App.css';\nimport Navbar from './components/Navbar';\n\nfunction App () {\n  \n  \n  return (\n    <>\n    <Navbar />\n      <div>\n        <Home />\n        <Portfolio />\n        <Contact />\n      \n      </div>\n      <Footer />\n   </>\n    \n\n  );\n   \n   \n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n \n    <App />,\n \n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}